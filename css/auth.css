// auth.js - 处理登录和注册页面逻辑

// 登录页面逻辑
if (document.getElementById('loginForm')) {
    document.getElementById('loginForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const username = document.getElementById('username').value;
        const password = document.getElementById('password').value;
        const remember = document.getElementById('remember').checked;
        
        const users = JSON.parse(localStorage.getItem('classUsers') || []);
        const user = users.find(u => u.username === username && u.password === password);
        
        if (user) {
            localStorage.setItem('currentUser', JSON.stringify(user));
            
            // 如果勾选"记住我"，设置长期存储
            if (remember) {
                localStorage.setItem('rememberedUser', JSON.stringify({
                    username: user.username,
                    token: btoa(`${username}:${password}`)
                }));
            }
            
            alert(`欢迎回来，${username}！`);
            window.location.href = 'index.html';
        } else {
            alert('用户名或密码错误！');
        }
    });
}

// 注册页面逻辑
if (document.getElementById('registerForm')) {
    document.getElementById('registerForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const username = document.getElementById('regUsername').value;
        const email = document.getElementById('regEmail').value;
        const password = document.getElementById('regPassword').value;
        const confirm = document.getElementById('regConfirm').value;
        
        if (password !== confirm) {
            alert('两次输入的密码不一致！');
            return;
        }
        
        const users = JSON.parse(localStorage.getItem('classUsers') || []);
        const userExists = users.some(u => u.username === username);
        
        if (userExists) {
            alert('用户名已存在！');
            return;
        }
        
        const newUser = { username, email, password, role: 'user' };
        users.push(newUser);
        localStorage.setItem('classUsers', JSON.stringify(users));
        localStorage.setItem('currentUser', JSON.stringify(newUser));
        
        alert('注册成功！');
        window.location.href = 'index.html';
    });
}

// 自动填充记住的用户
document.addEventListener('DOMContentLoaded', () => {
    const rememberedUser = JSON.parse(localStorage.getItem('rememberedUser'));
    
    if (rememberedUser && document.getElementById('username')) {
        try {
            const [username, password] = atob(rememberedUser.token).split(':');
            document.getElementById('username').value = username;
            document.getElementById('password').value = password;
            document.getElementById('remember').checked = true;
        } catch (e) {
            console.error('自动登录失败', e);
        }
    }
});